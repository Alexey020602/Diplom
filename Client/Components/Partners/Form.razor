@using DataBase.Models;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Web;
@using Client.Services;
@using Client.Shared;
@rendermode RenderMode.InteractiveWebAssembly
@* @inject IPartnerTypesService PartnerTypesService;
@inject IDirectionsService DirectionsService; *@

@if (Partner != null)
{
    <EditForm class="form" Model=@Partner OnValidSubmit="@OnValidSubmit">
        <DataAnnotationsValidator />
        <InputWithFloatTitle Title="Краткое название" @bind-Value=@Partner.ShortName />
        <ValidationMessage For="@( () => Partner.ShortName )" />
        <InputWithFloatTitle Title="Полное название" @bind-Value=@Partner.FullName />

        <InputWithFloatTitle Title="Адрес" @bind-Value=@Partner.Address />
        <div>
            <p>Контактные данные</p>
            <InputTextArea @bind-Value="Partner.ContactData" />
        </div>
        <InputWithFloatTitle Title="Город" @bind-Value=@Partner.City />
        <div>
            <PartnerTypesSelect @bind-PartnerType=@Partner.PartnerType/>
            @if(partnerTypes != null)
            {
                <SelectInList 
                    Items=@partnerTypes
                    GetStringFromItem=@(partnerType => partnerType.Id.ToString()) 
                    @bind-SelectedItem=@Partner.PartnerType/>
            }
        </div>
@*         <div>
            @if (partnerTypes != null)
            {
                <InputSelect @bind-Value:get="@PartnerTypeId" @bind-Value:set="@OnPartnerTypeSelected">
                    @foreach (var partnerType in partnerTypes)
                    {
                        <option value="@partnerType.Id.ToString()">
                            @partnerType.Name
                        </option>
                    }
                </InputSelect>
                <ValidationMessage For="@( () => Partner.PartnerType )" />
            }
        </div> *@
        <div>
            @if (directions != null && Partner.Directions != null)
            {
                <MultipleSelect NoSelected=@directions Selected=@Partner.Directions />
                <ValidationMessage For=@( () => Partner.Directions) />
            }
            else
            {
                <p>
                    Один из списков пустой
                </p>
            }
        </div>
        <div>
            <input class="oval-button orange-fill" type="button" onclick="history.back()" value="Отмена" />
            <input class="oval-button blue-fill" type="submit" value="Сохранить" />
        </div>
        <div>
            @if (Partner.Directions != null)
            {
                <ul>
                    @foreach (var direction in Partner.Directions)
                    {
                        <li>
                            @direction.Name
                        </li>
                    }
                </ul>
            }
        </div>
    </EditForm>
}