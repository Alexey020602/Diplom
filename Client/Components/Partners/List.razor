@using Microsoft.AspNetCore.Components.Forms;
@using Client.Shared.Select;
@using Client.Shared.List;
@using Client.Shared.Text;
@using SharedModel;
@rendermode RenderMode.InteractiveWebAssembly
@page "/"
@page "/partners"

<PageTitle>Патнеры университета</PageTitle>
<div>
    <div style="float:left; width: 150px;">
        <UniversalCustomSelect TItem=@DataBase.Models.PartnerType @bind-SelectedItem:get=@PartnerType @bind-SelectedItem:set=@SelectPartnerType GetStringIdentifier=@(type => type.Id.ToString())/>
        @* <PartnerTypesSelect @bind-PartnerType:get=@PartnerType @bind-PartnerType:set=@SelectPartnerType /> *@
        <button onclick=@ResetSelectedPartnerType>Сбросить</button>
    </div>
    <div style="margin-left: 150px;">
        @Filter
        <div>
            <NavLink class="oval-button blue-fill" href="partners/create">
                Добавить
            </NavLink>
        </div>
        @if (ShowPartners)
        {
            @PartnersList
        }
        else
        {
            @NullPartners
        }

    </div>
</div>

@code {
    private RenderFragment Filter =>@<SearchText @bind-Input=@ShortNameFilter/>;

    private RenderFragment NullPartners => @<div>
        @message
        <button class="oval-button blue-fill" onclick=@LoadPartners>Загрузить</button>
    </div>;

    private RenderFragment PartnersList => @<StyledList List=@ShowedPartners>
        <RowFragment Context="partner">
            @PartnerLink(partner)
        </RowFragment>
    </StyledList>;

    private RenderFragment PartnerLink(PartnerShort partner) => @<NavLink href="@($"partners/{partner.Id}")">@partner.Name</NavLink>;
}