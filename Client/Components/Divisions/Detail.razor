@using Model.Divisions;
@using Client.Services;
@using Client.Shared.Text;
@using Client.Shared.List;

@page "/divisions/{id:int}"
<div>
    <div>
        <button onclick="history.back()" class="oval-button blue-fill">Назад</button>
        <NavLink class="oval-button blue-outline" style="display:inline-block" href=@($"divisions/{Id}/edit")>
            Редактировать    
        </NavLink>
    </div>

    <div>
        @if(division is not null)
        {
            <h3>@division.ShortName</h3>
            <h4>@division.FullName</h4>
            <TextWithTitle Title="Факультет" Text=@division.Faculty?.ToString() />
            <TextWithTitle Title="Контактные данные" Text=@division.Contacts />
            <TextWithTitle Title="Сайт" Text=@division.Site />
            <ListWithTitle Title="Направления" Items=@division.Directions />
        }
    </div>
</div>
@code {
    [Inject] private IDivisionsService DivisionsService { get; set; } = null!;
    [Parameter] public int Id { get; set; }
    private Division? division;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            division = await DivisionsService.ReadOne(Id);
        } 
        catch(Exception ex)
        {
            //TODO Добавить обработку исключений
            Console.WriteLine(ex);
        }
    }
}
