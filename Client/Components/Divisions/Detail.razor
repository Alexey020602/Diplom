@attribute [Authorize(Roles = "Cip")]
@page "/divisions/{id:int}"
@using Client.Services.Api
@using Client.Shared.List
@using Client.Shared.Text
@using Client.Shared
@using Microsoft.AspNetCore.Authorization
@using Model
@using Model.Divisions
@inherits DetailPage<Division>

@{
    base.BuildRenderTree(__builder);
}

@code {
    [Inject] private IDivisionsService DivisionsService { get; set; } = null!;
    
    protected override RenderFragment? Header(Division item) => @<div>
        <RadzenText TagName="TagName.H3" Text=@item.ShortName/>
        <RadzenText TagName="TagName.H4" Text="@item.FullName"/>
    </div>;

    protected override IEnumerable<Row> Rows(Division item) => 
    [
        new("Факультет",@item.Faculty?.ToString() ),
        new("Контактные данные",@item.Contacts ),
        new("Сайт",@item.Site ),
        new("Направления", Directions(item)),
    ];

    private RenderFragment Directions(Division division) => @<div>
        @foreach (var direction in division.Directions)
        {
            @DirectionRow(direction)
        }
    </div>;
    private RenderFragment DirectionRow(Direction direction) => @<p>@direction</p>;

    protected override string? Title => Item?.ShortName;
    protected override string EntitiesPath => "divisions";
    protected override Task Delete() => DivisionsService.Delete(Id);
    protected override bool CanDelete => true;

    protected override Task<Division> LoadItem() => DivisionsService.ReadOne(Id);

}