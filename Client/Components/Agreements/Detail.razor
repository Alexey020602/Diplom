@using Client.Services.Api
@using Client.Shared.List
@using Client.Shared.Text
@using Microsoft.AspNetCore.Authorization
@using Model.Agreements
@inherits Client.Shared.DetailPage<Agreement>
@attribute [Authorize(Roles = "Cip")]

@page "/agreements/{id:int}"

@{
    base.BuildRenderTree(__builder);
}

@code {
    [Inject] private IAgreementService AgreementService { get; set; } = null!;

    protected override Task<Agreement> LoadItem()
    {
        return AgreementService.ReadOne(Id);
    }

    protected override RenderFragment? Header(Agreement item) => @<RadzenText TagName="TagName.H3" Text=@item.Number/>;

    //todo Доделать детали соглашения
    protected override IEnumerable<Row> Rows(Agreement item) =>
    [
        new("Тип", @item.Type?.Name),
        new("Статус", @item.Status?.Name),
        new("Начало", @item.Start.ToShortDateString()),
        new("Конец", @item.End.ToShortDateString()),
        new("Подразделения", Divisions(item)),
        new("Партнеры", Partners(item)),
    ];

    private RenderFragment Divisions(Agreement item) => @<div>
        @foreach (var division in item.Divisions)
        {
            @DivisionRow(division);
        }
    </div>;

    private RenderFragment Partners(Agreement item) => @<div>
        @foreach (var partner in item.Partners)
        {
            @PartnerRow(partner)
        }
    </div>;

    private RenderFragment DivisionRow(DivisionInAgreement division) => @<NavLink href=@($"/{NavigationConstants.DivisionsPath}/{division.Id}")>@division</NavLink>;

    private RenderFragment PartnerRow(PartnerInAgreement partner) => @<NavLink href=@($"/{NavigationConstants.PartnersPath}/{partner.Id}")>@partner</NavLink>;

    protected override string? Title => Item?.ToString();
    protected override string EntitiesPath => "agreements";
    protected override Task Delete() => AgreementService.Delete(Id);

}